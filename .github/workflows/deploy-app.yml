name: Deploy app to VPS on dispatch

on:
  repository_dispatch:
    types: [deploy-app]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout app repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.client_payload.app_repo }}
          ref: ${{ github.event.client_payload.ref }}
          token: ${{ secrets.GH_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compose image tag
        id: meta
        run: |
          SHA_SHORT="${GITHUB_SHA::7}"
          IMG_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.client_payload.image_name }}"
          echo "IMAGE=${IMG_NAME}" >> $GITHUB_OUTPUT
          echo "TAG=${IMG_NAME}:${SHA_SHORT}" >> $GITHUB_OUTPUT
          echo "LATEST=${IMG_NAME}:latest" >> $GITHUB_OUTPUT

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.TAG }}
            ${{ steps.meta.outputs.LATEST }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.IMAGE }}:buildcache,mode=max
          build-args: |
            NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
            NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
            NEXT_PUBLIC_SANITY_API_VERSION=${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}

      - name: SSH deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            IMAGE="${{ steps.meta.outputs.LATEST }}"
            docker pull "$IMAGE"
            docker stop nextjs-app || true
            docker rm nextjs-app || true
            # Inject server-only secrets here (NOT NEXT_PUBLIC)
            docker run -d --name nextjs-app -p 3000:3000 \
              -e NODE_ENV=production \
              -e SANITY_READ_TOKEN="${{ secrets.SANITY_READ_TOKEN }}" \
              "$IMAGE"
